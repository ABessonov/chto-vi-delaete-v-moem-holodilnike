{
  "name": "chto-vi-delaete-v-moem-holodilnike",
  "version": "1.0.0",
  "description": "​ **Суть задания:** сделать сервис хранения продуктов для каждого юзера.   ​ **Функционал:**   необходимо иметь возможность:   ​ -   добавлять продукт в холодильник; -   редактировать **свой** продукт в холодильнике; -   изменять категорию **своего** продукта; -   удалять **свой** продукт из холодильника; -   находить и смотреть продукт по названию; -   найти все продукты определенной категории; ​ ​ ### R0:  Пустой холодильник Начни с того, что у тебя должен запускаться [express-сервер](https://www.npmjs.com/package/express) и рендерить пустую страницу. Позже на этой странице будут отображаться все продукты, которые были добавлены в холодильник. ​ ​ ### R1:  Купи батон Холодильник не может вечно быть пустым, реализуй возможность добавления продуктов. Для этого тебе понадобится страница с формой добавления и ручка на сервере, которая реализует запись в БД через соответствующую [модель](https://sequelize.org/master/manual/migrations.html#creating-the-first-model--and-migration-). На этом этапе уже можно сделать категории продуктов, чтобы потом к этому не возвращаться. Добавь несколько заранее подготовленных категорий например, \"молочные продукты\", \"сладости\", \"овощи\". Сделай возможность выбора категории при добавлении продукта. ​ ​ ### R2:  Что тут у нас лежит? Открыв холодильник, становится видно продукты, лежащие в нем. Зарендери на главной странице все, что есть в холодильнике. Хотелось бы видеть на странице с продуктами не просто список, а прямоугольные блоки с картинками (можно хранить в БД просто ссылку на изображение и подставлять в `<img src=\"{{imageFormDatabase}}\">`), названием и категорией продукта.   **Если ты невероятно крут и хранить ссылку на картинку тебе мало, ты можешь реализовать загрузку картинок на свой сервер. Тебе могут помочь библиотеки [multer](https://github.com/expressjs/multer) или [express-fileupload](https://www.npmjs.com/package/express-fileupload) Вот рабочий [пример кода](https://github.com/richardgirges/express-fileupload/tree/master/example#basic-file-upload). ​ ​ ### R3:  Мама, я покушал Продукты из холодильника можно съесть. На всех продуктах должна быть кнопка \"Съесть\" которая удаляет продукт из холодильника. ​ ​ ### R4:  Куда дальше идти? И где моя еда?! Реализуй навигационное меню в шапке сайта. Добавь в навигационное меню форму с кнопкой, которая позволяет найти любой продукт по названию.   ** Можешь реализовать еще и поиск по категории. ​ ​ ### R5:  Ты кто такой, давай до свидания Сделай так, чтобы к холодильнику имели доступ только авторизованные пользователи. Если аноним откроет холодильник, то он не увидит в нем ничего! ​ ​ ### R6:  Эти эклеры мои! Кнопка \"съесть\" должна появляться у пользователя только на принадлежащих ему продуктах. Нельзя съесть чужую еду! Реализуй соответствующий [middleware](https://expressjs.com/ru/guide/using-middleware.html). ​ ​ ### R7:  А если найду? Проверь чтобы чужие продукты были защищены от  несанкционированного съедения не только отсутствием кнопки, но и дополнительной проверкой на сервере. Особо хитрые поедатели могут съесть продукты и без кнопки, посто зная их id в базе. Сделай так чтобы чужие продукты нельзя было съесть даже по прямой ссылке или через [postman](https://www.postman.com/downloads/). ​ ​ ### R8*: Ночной зажор Сделай [темную тему](https://medium.com/js-dojo/how-to-enable-dark-mode-on-your-website-with-pure-css-32640335474) и соответствующий переключатель для любителей поесть по ночам. Выбранная тема должна сохраняться даже после перезагрузки страницы. Ты можешь использовать для этого [LocalStorage](https://learn.javascript.ru/localstorage). ​ ​ ### R9*: Лучше никогда, чем слишком поздно А что со сроком годности? Продукты имеют свойство портиться, даже в таком высокотехнологичном холодильнике. Добавь поле \"срок годности\" к каждому продукту и не выводи на странице испортившиеся продукты. ​ ​ ### R10: Я думал это яблоко, а оказалось - колбаса (: Сделай возможность редактирования своих продуктов. Для этого тебе понадобится: \t- кнопка \"редактировать\" на продуктах; \t- мидлвер, который добавляет эту кнопку только владельцу продукта; \t- ручка, которая рендерит страницу с формой и заполняет ее данными о продукте; \t- ручка, которая принимает новую информацию о продукте и сохраняет ее в БД; \t- возможно, что-то еще :)",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node app.js",
    "dev": "nodemon app.js --ignore sessions"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ABessonov/chto-vi-delaete-v-moem-holodilnike.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/ABessonov/chto-vi-delaete-v-moem-holodilnike/issues"
  },
  "homepage": "https://github.com/ABessonov/chto-vi-delaete-v-moem-holodilnike#readme",
  "dependencies": {
    "axios": "^0.27.2",
    "bcrypt": "^5.0.1",
    "dotenv": "^16.0.1",
    "express": "^4.18.1",
    "express-session": "^1.17.3",
    "hbs": "^4.2.0",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "pg": "^8.7.3",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.20.1",
    "session-file-store": "^1.5.0"
  },
  "devDependencies": {
    "eslint": "^8.16.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.26.0",
    "sequelize-cli": "^6.4.1"
  }
}
